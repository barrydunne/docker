# To run from the command line, use the --build option to build the api image
# The command should be run from the folder containing this file
#
# docker compose -p microservices-state up -d --build

networks:
  microservices-infrastructure_microservices-net:
    external: true

services:

  mongo.microservices-state:
    image: mongo:7.0.2
    container_name: mongo.microservices-state
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=P@ssw0rd
    restart: unless-stopped
    networks:
      microservices-infrastructure_microservices-net:
        ipv4_address: 172.30.0.31
    ports:
      - 12017:27017 # Can connect from MongoDB Compass on mongodb://admin:P%40ssw0rd@localhost:12017/
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.runCommand({ ping: 1 })'"]
      interval: 30s
      timeout: 20s
      retries: 10

  api.microservices-state:
    image: ${DOCKER_REGISTRY-}api.microservices-state
    container_name: api.microservices-state
    build:
      context: ../../
      dockerfile: State/State/State.Api/Dockerfile
      target: final
    env_file:
      - docker-compose.env
    restart: no
    extra_hosts:
      - rabbitmq1:172.30.0.2
      - rabbitmq2:172.30.0.3
      - seq:172.30.0.4
      - secretsmanager:172.30.0.12
    networks:
      microservices-infrastructure_microservices-net:
        ipv4_address: 172.30.0.30
    ports:
      - 12080:8080 # HTTP
      - 12081:8081 # Prometheus metrics
    depends_on:
      - mongo.microservices-state
