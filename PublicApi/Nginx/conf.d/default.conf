# This will replace the standard /etc/nginx/conf.d/default.conf file

upstream api {
    server api.microservices-publicapi:8080 fail_timeout=10 weight=1;
}

proxy_cache_path /var/cache/nginx/idempotency
    keys_zone=idempotency:10m
    inactive=7d
    max_size=1g
    use_temp_path=off;

log_format cache_log_format '[$time_local] $remote_addr $upstream_cache_status "$request" $status $body_bytes_sent';

server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    # Capture if the X-Idempotency-Key header was provided and not blank
    set $idempotency_key_present 0;
    if ($http_x_idempotency_key) {
        set $idempotency_key_present 1;
    }
    # Set $idempotency_key_present to 1 for any GET request as it is not required
    if ($request_method = GET) {
        set $idempotency_key_present 1;
    }

    # Cache log.
    # The standard access.log is already defined in the base /etc/nginx/nginx.conf file,
    # This will add an additional log file used for logging cache HIT/MISS etc.
    access_log   /var/log/nginx/cache.log cache_log_format;

    # Default Cache-Control
    proxy_hide_header Cache-Control;
    add_header Cache-Control no-store;

    location / {
        proxy_pass  http://api;
    }

    # Change the API host in the swagger.json file to the host of this nginx server
    location /swagger/swagger.json {
        proxy_pass http://api/swagger/swagger.json;
        sub_filter '"host": "api"' '"host": "$host:11080"'; # Use 11080 rather than $server_port as it is the external docker mapped port
        sub_filter_once off;
        sub_filter_types application/json;
        add_header X-Swagger-Status 'Host changed from http://api to http://$host:11080';
    }

    location /job {

        # Set the default type so that when returning 400 for no X-Idempotency-Key header it does not return Content-Type: application/octet-stream
        types {}
        default_type text/plain;

        # X-Idempotency-Key header is required for this endpoint, if not supplied then return 400 with some content explaining the issue
        if ($idempotency_key_present = 0) {
            return 400 'Bad Request: Required header X-Idempotency-Key is missing or blank.';
        }

        # Enable caching for POST requests to this endpoint
        proxy_cache idempotency;
        proxy_cache_methods POST;
        # The caching should be for each different X-Idempotency-Key header
        proxy_cache_key "$http_x_idempotency_key$request_method";
        proxy_cache_min_uses 1;
        proxy_cache_valid 200 7d; # In this example 7 days is the longest we care about idempotency and can repeat the request after that
        proxy_cache_valid any 0; # Only interested in caching 200 status code responses.
        # Ignore Cache-Control headers from the backend that prevent caching and cache the response anyway
        proxy_ignore_headers Cache-Control;
        # Return whether it was a HIT from the cache or a MISS sent to the backend
        add_header X-Cache-Status $upstream_cache_status;

        proxy_pass  http://api;
    }

    # Used for container health check
    location /nginx-health {
         return 200;
         # because default content-type is application/octet-stream,
         # browser will offer to "save the file"...
         # the next line allows you to see it in the browser so you can test
         add_header Content-Type text/plain;
    }

    error_page   404              /404.html;
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

